{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport firebase from \"firebase\";\nimport { combineReducers } from \"redux\";\nimport { CURRENT_SHELTER_PET_REQUESTS, USERS_PETS_DATA } from \"../constants\";\n\nrequire('firebase/firestore');\n\nexport var showPetRequests = function showPetRequests(petuid) {\n  var uid = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : firebase.auth().currentUser.uid;\n  return function (dispatch) {\n    firebase.firestore().collection('user').doc(uid).collection('Mascotas').doc(petuid).collection('Solicitud').onSnapshot(function (snapshot) {\n      var requests = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      dispatch({\n        type: CURRENT_SHELTER_PET_REQUESTS,\n        currentShelterPetRequests: requests\n      });\n    });\n  };\n};\nexport function fetchPetsData(uid) {\n  return function (dispatch, getState) {\n    var found = getState().usersState.users.some(function (el) {\n      return el.uid == uid;\n    });\n\n    if (!found) {\n      firebase.firestore().collection('user').doc(uid).collection('Mascotas').get().then(function (snapshot) {\n        var pets = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        dispatch({\n          type: USERS_PETS_DATA,\n          pets: pets\n        });\n      });\n    }\n  };\n}","map":{"version":3,"names":["firebase","combineReducers","CURRENT_SHELTER_PET_REQUESTS","USERS_PETS_DATA","require","showPetRequests","petuid","uid","auth","currentUser","dispatch","firestore","collection","doc","onSnapshot","snapshot","requests","docs","map","data","id","type","currentShelterPetRequests","fetchPetsData","getState","found","usersState","users","some","el","get","then","pets"],"sources":["/home/jesus/Ulima/IX-Ciclo/Gest-proyectos/pocket-pet-gp/frontend/src/redux/actions/requests.js"],"sourcesContent":["import firebase from \"firebase\";\nimport { combineReducers } from \"redux\";\nimport { CURRENT_SHELTER_PET_REQUESTS,USERS_PETS_DATA} from \"../constants\";\nrequire('firebase/firestore')\n\nexport const showPetRequests= (petuid, uid=firebase.auth().currentUser.uid )=>(dispatch)=>{\n    firebase.firestore()\n    .collection('user')\n    .doc(uid)\n    .collection('Mascotas')\n    .doc(petuid)\n    .collection('Solicitud')\n    .onSnapshot((snapshot)=>{\n        let requests = snapshot.docs.map(doc=>{\n            const data= doc.data()\n            const id= doc.id    \n            return{id, ...data}\n        })\n\n         //Si es el perfil del usuario\n        dispatch({type: CURRENT_SHELTER_PET_REQUESTS, currentShelterPetRequests: requests})\n        \n    })\n}\n\nexport function fetchPetsData(uid){\n    return((dispatch,getState)=>{\n        const found = getState().usersState.users.some(el => el.uid == uid);\n        if (!found) {\n        firebase.firestore()\n        .collection('user')\n        .doc(uid)\n        .collection('Mascotas')\n        .get()\n        .then((snapshot)=>{\n            \n            let pets = snapshot.docs.map(doc => {\n                const data = doc.data();\n                const id = doc.id;\n                return { id, ...data }   \n            \n                });\n            dispatch({type: USERS_PETS_DATA, pets:pets})\n            \n    })}\n})}\n\n"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAASC,4BAAT,EAAsCC,eAAtC;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,OAAO,IAAMC,eAAe,GAAE,SAAjBA,eAAiB,CAACC,MAAD;EAAA,IAASC,GAAT,uEAAaP,QAAQ,CAACQ,IAAT,GAAgBC,WAAhB,CAA4BF,GAAzC;EAAA,OAAgD,UAACG,QAAD,EAAY;IACtFV,QAAQ,CAACW,SAAT,GACCC,UADD,CACY,MADZ,EAECC,GAFD,CAEKN,GAFL,EAGCK,UAHD,CAGY,UAHZ,EAICC,GAJD,CAIKP,MAJL,EAKCM,UALD,CAKY,WALZ,EAMCE,UAND,CAMY,UAACC,QAAD,EAAY;MACpB,IAAIC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,UAAAL,GAAG,EAAE;QAClC,IAAMM,IAAI,GAAEN,GAAG,CAACM,IAAJ,EAAZ;QACA,IAAMC,EAAE,GAAEP,GAAG,CAACO,EAAd;QACA;UAAOA,EAAE,EAAFA;QAAP,GAAcD,IAAd;MACH,CAJc,CAAf;MAOAT,QAAQ,CAAC;QAACW,IAAI,EAAEnB,4BAAP;QAAqCoB,yBAAyB,EAAEN;MAAhE,CAAD,CAAR;IAEH,CAhBD;EAiBH,CAlB6B;AAAA,CAAvB;AAoBP,OAAO,SAASO,aAAT,CAAuBhB,GAAvB,EAA2B;EAC9B,OAAO,UAACG,QAAD,EAAUc,QAAV,EAAqB;IACxB,IAAMC,KAAK,GAAGD,QAAQ,GAAGE,UAAX,CAAsBC,KAAtB,CAA4BC,IAA5B,CAAiC,UAAAC,EAAE;MAAA,OAAIA,EAAE,CAACtB,GAAH,IAAUA,GAAd;IAAA,CAAnC,CAAd;;IACA,IAAI,CAACkB,KAAL,EAAY;MACZzB,QAAQ,CAACW,SAAT,GACCC,UADD,CACY,MADZ,EAECC,GAFD,CAEKN,GAFL,EAGCK,UAHD,CAGY,UAHZ,EAICkB,GAJD,GAKCC,IALD,CAKM,UAAChB,QAAD,EAAY;QAEd,IAAIiB,IAAI,GAAGjB,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,UAAAL,GAAG,EAAI;UAChC,IAAMM,IAAI,GAAGN,GAAG,CAACM,IAAJ,EAAb;UACA,IAAMC,EAAE,GAAGP,GAAG,CAACO,EAAf;UACA;YAASA,EAAE,EAAFA;UAAT,GAAgBD,IAAhB;QAEC,CALM,CAAX;QAMAT,QAAQ,CAAC;UAACW,IAAI,EAAElB,eAAP;UAAwB6B,IAAI,EAACA;QAA7B,CAAD,CAAR;MAEP,CAfG;IAeD;EACN,CAnBG;AAmBD"},"metadata":{},"sourceType":"module"}