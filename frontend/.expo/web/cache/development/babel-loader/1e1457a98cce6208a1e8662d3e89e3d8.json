{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\2022-1\\\\GEST.PROYECTOS\\\\pocket-pet\\\\frontend\\\\src\\\\components\\\\container\\\\PostFeed.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Post } from \"../presentation\";\nimport firebase from 'firebase';\nimport moment from 'moment';\nimport { connect, useDispatch } from \"react-redux\";\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { Initusuarios, clearData } from \"../../redux/actions/post\";\nimport { bindActionCreators } from 'redux';\n\nfunction PostFeed(props) {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFetching = _useState4[0],\n      setIsFetching = _useState4[1];\n\n  var fetchData = function fetchData() {\n    dispatch(clearData());\n    dispatch(Initusuarios());\n    setIsFetching(false);\n  };\n\n  var onRefresh = function onRefresh() {\n    setIsFetching(true);\n    fetchData();\n  };\n\n  useEffect(function () {\n    var posts = [];\n\n    for (var i = 0; i < props.loadeds.length; i++) {\n      var user = props.users[i];\n\n      if (user !== undefined && user.posts !== undefined) {\n        try {\n          posts = [].concat(_toConsumableArray(posts), _toConsumableArray(user.posts));\n        } catch (error) {\n          console.log(\"null post managed\");\n        }\n      }\n    }\n\n    posts.sort(function (x, y) {\n      return y.creation - x.creation;\n    });\n    setPosts(posts);\n  }, [props.usersLoaded]);\n  return React.createElement(FlatList, {\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Post, {\n        id: item.id,\n        user: item.user,\n        tipo: item.tipo,\n        fecha: parseInt(item.creation.seconds),\n        image: item.downloadUrl,\n        info: item.description,\n        userimage: item.user.Image,\n        navigation: navigation,\n        data: [item.description, item.collar, item.estatura, item.accesorios],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    extraData: posts,\n    onRefresh: onRefresh,\n    refreshing: isFetching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  });\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    users: store.usersState.users,\n    usersLoaded: store.usersState.usersLoaded,\n    loadeds: store.loadeds.users\n  };\n};\n\nexport default connect(mapStateToProps, null)(PostFeed);","map":{"version":3,"names":["React","Component","useEffect","useState","Post","firebase","moment","connect","useDispatch","NavigationContainer","useNavigation","Initusuarios","clearData","bindActionCreators","PostFeed","props","dispatch","navigation","posts","setPosts","isFetching","setIsFetching","fetchData","onRefresh","i","loadeds","length","user","users","undefined","error","console","log","sort","x","y","creation","usersLoaded","item","id","tipo","parseInt","seconds","downloadUrl","description","Image","collar","estatura","accesorios","mapStateToProps","store","currentUser","userState","usersState"],"sources":["D:/2022-1/GEST.PROYECTOS/pocket-pet/frontend/src/components/container/PostFeed.js"],"sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport { FlatList, View, Text } from 'react-native';\r\nimport { Post } from \"../presentation\"\r\nimport firebase from 'firebase';\r\nimport moment from 'moment'\r\n//import { ActivityIndicator } from 'react-native-paper';\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\r\nimport { Initusuarios, clearData } from '../../redux/actions/post'\r\nimport { bindActionCreators } from 'redux';\r\n\r\n\r\n\r\n\r\n\r\n//contenedor de todos los posts creados\r\nfunction PostFeed(props) {\r\n    const dispatch = useDispatch()\r\n    const navigation= useNavigation()\r\n    const [posts, setPosts] = useState([]);\r\n    const [isFetching, setIsFetching] = useState(false)\r\n\r\n    const fetchData = () => {\r\n        dispatch(clearData());\r\n        dispatch(Initusuarios());\r\n        setIsFetching(false);\r\n    }\r\n    const onRefresh = () => {\r\n        setIsFetching(true);\r\n        fetchData()\r\n    } \r\n\r\n    useEffect(() => {\r\n        let posts = [];\r\n\r\n        for (let i = 0; i < props.loadeds.length; i++) {\r\n            const user = props.users[i]//.find(el=>el.uid==props.loadeds[i]);\r\n\r\n            if (user !== undefined && user.posts !== undefined) {\r\n                try {\r\n                    posts = [...posts, ...user.posts]\r\n                } catch (error) {\r\n                    console.log(\"null post managed\")\r\n                }\r\n            }\r\n        }\r\n        posts.sort(function (x, y) {\r\n            return y.creation - x.creation;\r\n        })\r\n        //console.log(posts[0])\r\n        setPosts(posts);\r\n\r\n    }, [props.usersLoaded])\r\n\r\n    //FullName\r\n    //image\r\n\r\n    //{moment(item.timestamp).fromNow}\r\n    //me sirve para saber cuanto tiempo paso desde la publicacion hasta ahora\r\n    return (\r\n        <FlatList\r\n            data={posts}\r\n            renderItem={({ item }) => (\r\n\r\n                <Post\r\n                    id={item.id}\r\n                    user={item.user} //cambiÃ© esto para tener al usuario, si quieres el nombre del usuario le pones .FullName\r\n                    tipo={item.tipo}\r\n                    fecha={parseInt(item.creation.seconds)}\r\n                    image={item.downloadUrl}\r\n                    info={item.description}\r\n                    userimage={item.user.Image}\r\n                    navigation={navigation} //Para ir a otros perfiles\r\n                    data={[item.description,item.collar,item.estatura,item.accesorios]}\r\n                    \r\n                />\r\n            )}\r\n            keyExtractor={item => item.id}\r\n            extraData={posts}\r\n            onRefresh={onRefresh}\r\n            refreshing={isFetching}\r\n        //showsVerticalScrollIndicator={false}\r\n        />\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser,\r\n    users: store.usersState.users,\r\n    usersLoaded: store.usersState.usersLoaded,\r\n    loadeds: store.loadeds.users\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(PostFeed);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}