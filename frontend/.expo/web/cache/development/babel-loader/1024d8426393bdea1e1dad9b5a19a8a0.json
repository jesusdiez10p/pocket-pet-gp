{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userAuthStateListener } from \"../../redux/actions\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AuthScreen from \"../../screens/auth\";\nimport HomeScreen from \"../home\";\nimport SavePostScreen from \"../../screens/savePost\";\nimport EditUserScreen from \"../../screens/userEdit\";\nimport EditUserFieldScreen from \"../../screens/userEdit/field\";\nimport UserScreen from \"../../screens/user\";\nimport Post from \"../../components/presentation/Post\";\nimport CameraScreen from \"../../screens/camera\";\nimport PetLost from \"../../screens/petLost\";\nimport ViewPetSolicitants from \"../../components/pets/Solicitants\";\nimport FavoriteScreen from \"../../screens/favoritePosts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function Route() {\n  var currentUserObj = useSelector(function (state) {\n    return state.auth;\n  });\n  var dispatch = useDispatch();\n  var useralbergue = true;\n  useEffect(function () {\n    dispatch(userAuthStateListener());\n  }, []);\n\n  if (!currentUserObj.loaded) {\n    return _jsx(View, {});\n  }\n\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      children: currentUserObj.currentUser == null ? _jsx(Stack.Screen, {\n        name: \"auth\",\n        component: AuthScreen,\n        options: {\n          headerShown: false\n        }\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"home\",\n          initialParams: {\n            usuario: currentUserObj.currentUser\n          },\n          component: HomeScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"savepost\",\n          component: SavePostScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"edituser\",\n          component: EditUserScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"edituserfield\",\n          component: EditUserFieldScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"solicitantsview\",\n          component: ViewPetSolicitants,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"post\",\n          component: Post,\n          options: {\n            headerShown: true\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"camerapost\",\n          component: CameraScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"petpost\",\n          component: PetLost,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"UsersProfile\",\n          component: UserScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"favorites\",\n          component: FavoriteScreen,\n          options: {\n            headerShown: true\n          }\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","userAuthStateListener","NavigationContainer","createStackNavigator","AuthScreen","HomeScreen","SavePostScreen","EditUserScreen","EditUserFieldScreen","UserScreen","Post","CameraScreen","PetLost","ViewPetSolicitants","FavoriteScreen","Stack","Route","currentUserObj","state","auth","dispatch","useralbergue","loaded","currentUser","headerShown","usuario"],"sources":["/home/jesus/Ulima/IX-Ciclo/Gest-proyectos/pocket-pet-gp/frontend/src/navigation/main/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { View, Text } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userAuthStateListener } from \"../../redux/actions\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AuthScreen from \"../../screens/auth\";\nimport HomeScreen from \"../home\";\nimport SavePostScreen from \"../../screens/savePost\";\nimport EditUserScreen from \"../../screens/userEdit\";\nimport EditUserFieldScreen from \"../../screens/userEdit/field\";\nimport UserScreen from \"../../screens/user\";\nimport Post from '../../components/presentation/Post'\nimport CameraScreen from \"../../screens/camera\";\nimport PetLost from \"../../screens/petLost\";\nimport ViewPetSolicitants from \"../../components/pets/Solicitants\";\nimport FavoriteScreen from \"../../screens/favoritePosts\";\nconst Stack = createStackNavigator();\n\nexport default function Route() {\n  const currentUserObj = useSelector((state) => state.auth); //use selector allows us to access the data that comes from redux\n  const dispatch = useDispatch();\n  let useralbergue = true; //probando nueva interfaz del albergue\n  useEffect(() => {\n    dispatch(userAuthStateListener());\n  }, []);\n  //console.log(currentUserObj);\n\n  if (!currentUserObj.loaded) {\n    //cada que el usuario no haya cargado simplemente que no vaya a Route\n    return <View></View>;\n  }\n  return (\n    //CREACION DE CONTNEDOR PARA BARRITA\n    <NavigationContainer>\n      <Stack.Navigator>\n        {currentUserObj.currentUser == null ? (\n          <Stack.Screen\n            //SE MUESTRA AUTENTICACION\n            name=\"auth\"\n            component={AuthScreen}\n            options={{ headerShown: false }}\n            \n          />\n        ) : //SE MUESTRA HOME_SCREEN\n        \n          <>\n            <Stack.Screen\n              name=\"home\"\n              initialParams={{usuario:currentUserObj.currentUser}}\n              component={HomeScreen}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"savepost\"\n              component={SavePostScreen}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"edituser\"\n              component={EditUserScreen}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"edituserfield\"\n              component={EditUserFieldScreen}\n              options={{ headerShown: false }}\n              \n            />\n            <Stack.Screen\n              name=\"solicitantsview\"\n              component={ViewPetSolicitants}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"post\"\n              component={Post}\n              options={{headerShown:true}}\n            />\n              \n            <Stack.Screen\n              name=\"camerapost\"\n              component={CameraScreen}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"petpost\"\n              component={PetLost}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"UsersProfile\"\n              component={UserScreen}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"favorites\"\n              component = {FavoriteScreen}\n              options = {{headerShown : true}}\n            />\n          </>\n          \n}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}