{"ast":null,"code":"import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./src/redux/reducers\";\nimport Constants from \"expo-constants\";\nimport firebase from \"firebase/app\";\nimport Route from \"./src/navigation/main/index.js\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport _ from 'lodash';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar store = createStore(rootReducer, applyMiddleware(thunk));\n\nif (firebase.apps.length == 0) {\n  firebase.initializeApp(Constants.manifest.web.config.firebase);\n}\n\nLogBox.ignoreLogs(['Warning:...']);\nLogBox.ignoreAllLogs();\n\nvar _console = _.clone(console);\n\nconsole.warn = function (message) {\n  if (message.indexOf('Setting a timer') <= -1) {\n    _console.warn(message);\n  }\n};\n\nexport default function App() {\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(Route, {})\n  });\n}","map":{"version":3,"names":["React","Provider","createStore","applyMiddleware","thunk","rootReducer","Constants","firebase","Route","_","store","apps","length","initializeApp","manifest","web","config","LogBox","ignoreLogs","ignoreAllLogs","_console","clone","console","warn","message","indexOf","App"],"sources":["/home/jesus/Ulima/IX-Ciclo/Gest-proyectos/pocket-pet-gp/frontend/App.js"],"sourcesContent":["import React from \"react\";\n\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./src/redux/reducers\";\n\nimport Constants from \"expo-constants\";\nimport firebase from \"firebase/app\";\nimport Route from \"./src/navigation/main/index.js\";\n\nimport { LogBox } from 'react-native';\nimport _ from 'lodash';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nif (firebase.apps.length == 0) {\n  firebase.initializeApp(Constants.manifest.web.config.firebase);\n  \n}\n//------CODIGO PARA EVITAR WARNINGS-------------//\nLogBox.ignoreLogs(['Warning:...']); // ignore specific logs\nLogBox.ignoreAllLogs(); // ignore all logs\nconst _console = _.clone(console);\nconsole.warn = message => {\nif (message.indexOf('Setting a timer') <= -1) {\n   _console.warn(message);\n   }\n};\n//--------------------------------------------------------------//\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <Route />\n    </Provider>\n    \n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,KAAP;;AAGA,OAAOC,CAAP,MAAc,QAAd;;AAEA,IAAMC,KAAK,GAAGR,WAAW,CAACG,WAAD,EAAcF,eAAe,CAACC,KAAD,CAA7B,CAAzB;;AAEA,IAAIG,QAAQ,CAACI,IAAT,CAAcC,MAAd,IAAwB,CAA5B,EAA+B;EAC7BL,QAAQ,CAACM,aAAT,CAAuBP,SAAS,CAACQ,QAAV,CAAmBC,GAAnB,CAAuBC,MAAvB,CAA8BT,QAArD;AAED;;AAEDU,MAAM,CAACC,UAAP,CAAkB,CAAC,aAAD,CAAlB;AACAD,MAAM,CAACE,aAAP;;AACA,IAAMC,QAAQ,GAAGX,CAAC,CAACY,KAAF,CAAQC,OAAR,CAAjB;;AACAA,OAAO,CAACC,IAAR,GAAe,UAAAC,OAAO,EAAI;EAC1B,IAAIA,OAAO,CAACC,OAAR,CAAgB,iBAAhB,KAAsC,CAAC,CAA3C,EAA8C;IAC3CL,QAAQ,CAACG,IAAT,CAAcC,OAAd;EACC;AACH,CAJD;;AAOA,eAAe,SAASE,GAAT,GAAe;EAC5B,OACE,KAAC,QAAD;IAAU,KAAK,EAAEhB,KAAjB;IAAA,UACE,KAAC,KAAD;EADF,EADF;AAMD"},"metadata":{},"sourceType":"module"}